(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{454:function(r,t,s){"use strict";s.r(t);var e=s(2),a=Object(e.a)({},(function(){var r=this,t=r._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("hr"),r._v(" "),t("h1",{attrs:{id:"一、帮助启动类命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、帮助启动类命令"}},[r._v("#")]),r._v(" 一、帮助启动类命令")]),r._v(" "),t("ul",[t("li",[r._v("启动docker： "),t("code",[r._v("systemctl start docker")])]),r._v(" "),t("li",[r._v("停止docker： "),t("code",[r._v("systemctl stop docker")])]),r._v(" "),t("li",[r._v("重启docker： "),t("code",[r._v("systemctl restart docker")])]),r._v(" "),t("li",[r._v("查看docker状态： "),t("code",[r._v("systemctl status docker")])]),r._v(" "),t("li",[r._v("开机启动： "),t("code",[r._v("systemctl enable docker")])]),r._v(" "),t("li",[r._v("查看docker概要信息： "),t("code",[r._v("docker info")])]),r._v(" "),t("li",[r._v("查看docker总体帮助文档： "),t("code",[r._v("docker --help")])]),r._v(" "),t("li",[r._v("查看docker命令帮助文档："),t("code",[r._v("docker 具体命令 --help")])])]),r._v(" "),t("h1",{attrs:{id:"二、镜像操作命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、镜像操作命令"}},[r._v("#")]),r._v(" 二、镜像操作命令")]),r._v(" "),t("h2",{attrs:{id:"_1、docker-images-列出镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、docker-images-列出镜像"}},[r._v("#")]),r._v(" 1、docker images 列出镜像")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker images [OPTIONS]")]),r._v("，列出本地主机上的镜像。"),t("br"),r._v("OPTIONS说明："),t("br"),r._v("-a :列出本地所有的镜像（含历史映像层）"),t("br"),r._v("-q :只显示镜像ID。"),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-24.png",alt:""}})]),r._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[r._v("各个选项说明:"),t("br"),r._v("--REPOSITORY：\t#表示镜像的仓库源"),t("br"),r._v("--TAG：\t\t\t#镜像的标签版本号"),t("br"),r._v("--IMAGE ID：\t\t#镜像ID"),t("br"),r._v("--CREATED：\t\t#镜像创建时间"),t("br"),r._v("--SIZE：\t\t\t#镜像大小")])]),t("p",[r._v("同一仓库源可以有多个 TAG版本，代表这个仓库源的不同个版本，我们使用 REPOSITORY:TAG 来定义不同的镜像。如果不指定一个镜像的版本标签，例如只使用 ubuntu，docker将默认使用 ubuntu:latest 镜像。")]),r._v(" "),t("h2",{attrs:{id:"_2、docker-search-查找镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、docker-search-查找镜像"}},[r._v("#")]),r._v(" 2、docker search 查找镜像")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker search [OPTIONS] 镜像名字")]),r._v("，根据镜像名字去dockerhub仓库上查找镜像。"),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-25.png",alt:""}}),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-26.png",alt:""}})]),r._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[r._v("OPTIONS说明："),t("br"),r._v("--limit : 只列出N个镜像，默认25个"),t("br"),r._v("例如：docker search --limit 5 redis")])]),t("h2",{attrs:{id:"_3、docker-pull-下载镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、docker-pull-下载镜像"}},[r._v("#")]),r._v(" 3、docker pull 下载镜像")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker pull 镜像名字[:TAG]")]),r._v("，根据镜像信息去hub上下载镜像到本地。"),t("br"),r._v("TAG可省略，没有TAG就会默认下载最新版，等价于"),t("code",[r._v("docker pull 镜像名字:latest")]),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-27.png",alt:""}})]),r._v(" "),t("h2",{attrs:{id:"_4、docker-system-df-查看空间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、docker-system-df-查看空间"}},[r._v("#")]),r._v(" 4、docker system df 查看空间")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker system df")]),r._v("，查看镜像/容器/数据卷所占的空间"),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-28.png",alt:""}})]),r._v(" "),t("h2",{attrs:{id:"_5、docker-rmi-删除镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、docker-rmi-删除镜像"}},[r._v("#")]),r._v(" 5、docker rmi 删除镜像")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker rmi 镜像ID | 镜像名:TAG")]),r._v("，删除一个或多个镜像。"),t("br"),r._v("删除单个："),t("code",[r._v("docker rmi -f 镜像ID")]),t("br"),r._v("删除多个："),t("code",[r._v("docker rmi -f 镜像名1:TAG 镜像名2:TAG")]),t("br"),r._v("删除全部："),t("code",[r._v("docker rmi -f $(docker images -qa)")])]),r._v(" "),t("h2",{attrs:{id:"_6、docker虚悬镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、docker虚悬镜像"}},[r._v("#")]),r._v(" 6、docker虚悬镜像")]),r._v(" "),t("p",[r._v("仓库名、标签都是"),t("code",[r._v("<none>")]),r._v("的镜像，俗称虚悬镜像dangling image，例如以下这种："),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-29.png",alt:""}}),t("br"),r._v("在实际开发中，在构建或者删除镜像时出错会有一定概率出现虚悬镜像。虚悬镜像不会被自动删除，因此可能会占用磁盘空间。"),t("br"),r._v("使用命令查看本地虚悬镜像"),t("code",[r._v("docker image ls -f dangling=true")]),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-30.png",alt:""}}),t("br"),r._v("删除虚悬镜像："),t("code",[r._v("docker image prune")]),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-31.png",alt:""}})]),r._v(" "),t("h1",{attrs:{id:"三、容器操作命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、容器操作命令"}},[r._v("#")]),r._v(" 三、容器操作命令")]),r._v(" "),t("h2",{attrs:{id:"_1、前提说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、前提说明"}},[r._v("#")]),r._v(" 1、前提说明")]),r._v(" "),t("p",[r._v("有镜像才能创建容器， 这是根本前提。"),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-32.png",alt:""}}),t("br"),r._v("实例化容器之前需要先docker pull将镜像拉取到本地。")]),r._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[r._v("# 例如以下命令可以下载centos和ubuntu镜像到本地")]),r._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[r._v("docker")]),r._v(" pull centos\n"),t("span",{pre:!0,attrs:{class:"token function"}},[r._v("docker")]),r._v(" pull ubuntu\n")])]),r._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[r._v("1")]),t("br"),t("span",{staticClass:"line-number"},[r._v("2")]),t("br"),t("span",{staticClass:"line-number"},[r._v("3")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-33.png",alt:""}})]),r._v(" "),t("h2",{attrs:{id:"_2、docker-run-新建-启动容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、docker-run-新建-启动容器"}},[r._v("#")]),r._v(" 2、docker run 新建+启动容器")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker run [OPTIONS] IMAGE [COMMAND] [ARG...]")])]),r._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[r._v("OPTIONS说明：（注意有些是一个减号，有些是两个减号）"),t("br"),r._v('--name="容器新名字"       为容器指定一个名称；'),t("br"),r._v("-d：后台运行容器并返回容器ID，也即启动守护式容器(后台运行)；"),t("br"),r._v("-i：以交互模式运行容器，通常与 -t 同时使用；"),t("br"),r._v("-t：为容器重新分配一个伪输入终端，通常与 -i 同时使用；也即启动交互式容器(前台有伪终端，等待交互)"),t("br"),r._v("-P: 随机端口映射，大写P"),t("br"),r._v("-p: 指定端口映射，小写p")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-34.png",alt:""}})]),r._v(" "),t("h2",{attrs:{id:"_3、启动交互式容器-前台命令行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、启动交互式容器-前台命令行"}},[r._v("#")]),r._v(" 3、启动交互式容器(前台命令行)")]),r._v(" "),t("p",[r._v("这里重点介绍一下启动交互式容器(前台命令行)，这种方式会根据镜像以交互模式启动一个容器，并在容器内执行/bin/bash命令。例如：")]),r._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[r._v("docker")]),r._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[r._v("-it")]),r._v(" centos /bin/bash \n")])]),r._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[r._v("1")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[r._v("参数说明："),t("br"),r._v("-i: 交互式操作。"),t("br"),r._v("-t: 分配伪终端。"),t("br"),r._v("centos : 指定centos 镜像。"),t("br"),r._v("/bin/bash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash。"),t("br"),r._v("要退出终端，直接输入 exit 回车。")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-35.png",alt:""}}),t("br"),r._v("可以看到在这个命令执行完以后我们的bash已经进入到了容器内部，此时我们输入的命令就会与容器进行交互。")]),r._v(" "),t("h2",{attrs:{id:"_4、docker-ps-列出正在运行的容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、docker-ps-列出正在运行的容器"}},[r._v("#")]),r._v(" 4、docker ps 列出正在运行的容器")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker ps [OPTIONS]")])]),r._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[r._v("OPTIONS说明："),t("br"),r._v("-a：列出当前所有正在运行的容器+历史上运行过的。"),t("br"),r._v("-l：显示最近创建的容器。"),t("br"),r._v("-n：显示最近n个创建的容器。"),t("br"),r._v("-q：静默模式，只显示容器编号。")])]),t("h2",{attrs:{id:"_5、退出容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、退出容器"}},[r._v("#")]),r._v(" 5、退出容器")]),r._v(" "),t("p",[r._v("退出容器有两种退出方式，一种是直接使用"),t("code",[r._v("exit")]),r._v("退出，使用exit命令退出容器时，容器将被停止并且退出到宿主机的命令行界面。"),t("br"),r._v("另一种是使用"),t("code",[r._v("ctrl + p + q")]),r._v("退出，这种方式不会停止容器的运行，只是将容器切换到后台")]),r._v(" "),t("h2",{attrs:{id:"_6、docker-start-启动容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、docker-start-启动容器"}},[r._v("#")]),r._v(" 6、docker start 启动容器")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker start 容器ID或者容器名")]),t("br"),r._v("使用这种方式可以将已停止运行的容器启动起来。")]),r._v(" "),t("h2",{attrs:{id:"_7、docker-restart-重启容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、docker-restart-重启容器"}},[r._v("#")]),r._v(" 7、docker restart 重启容器")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker restart 容器ID或者容器名")])]),r._v(" "),t("h2",{attrs:{id:"_8、docker-stop-停止容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8、docker-stop-停止容器"}},[r._v("#")]),r._v(" 8、docker stop 停止容器")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker stop 容器ID或者容器名")])]),r._v(" "),t("h2",{attrs:{id:"_9、docker-kill-强制停止容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9、docker-kill-强制停止容器"}},[r._v("#")]),r._v(" 9、docker kill 强制停止容器")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker kill 容器ID或容器名")])]),r._v(" "),t("h2",{attrs:{id:"_10、docker-rm-删除容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10、docker-rm-删除容器"}},[r._v("#")]),r._v(" 10、docker rm 删除容器")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker rm 容器ID")]),t("br"),r._v("一次性删除多个容器实例："),t("br"),t("code",[r._v("docker rm -f $(docker ps -a -q)")]),t("br"),t("code",[r._v("docker ps -a -q | xargs docker rm")])]),r._v(" "),t("h1",{attrs:{id:"四、进阶操作命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、进阶操作命令"}},[r._v("#")]),r._v(" 四、进阶操作命令")]),r._v(" "),t("h2",{attrs:{id:"_1、启动守护式容器-后台服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、启动守护式容器-后台服务器"}},[r._v("#")]),r._v(" 1、启动"),t("strong",[r._v("守护式容器(后台服务器)")])]),r._v(" "),t("p",[r._v("在大部分的场景下，我们希望 docker 的服务是在后台运行的， 我们可以通过 -d 指定容器的后台运行模式。")]),r._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[r._v("docker")]),r._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[r._v("-d")]),r._v(" 容器名\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[r._v("# 使用镜像centos:latest以后台模式启动一个容器")]),r._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[r._v("docker")]),r._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[r._v("-d")]),r._v(" centos\n")])]),r._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[r._v("1")]),t("br"),t("span",{staticClass:"line-number"},[r._v("2")]),t("br"),t("span",{staticClass:"line-number"},[r._v("3")]),t("br")])]),t("p",[r._v("但此时会有一个问题：使用docker ps -a 进行查看, 会发现容器已经退出。"),t("br"),r._v("这里要说明的是，Docker容器后台运行,就必须有一个前台进程。容器运行的命令如果不是那些一直挂起的命令（比如运行top，tail），是会自动退出的。"),t("br"),r._v("这个是docker的机制问题，比如web容器，我们以nginx为例，正常情况下，我们配置启动服务只需要启动响应的service即可。例如service nginx start。但是，这样做，nginx为后台进程模式运行，就导致docker前台没有运行的应用，这样的容器后台启动后，会立即自杀因为他觉得他没事可做了。所以，最佳的解决方案是将要运行的程序以前台进程的形式运行，常见就是命令行模式，表示我还有交互操作，别中断。"),t("br"),r._v("所以有的容器是必须要与前台进行交互的例如centos、ubuntu等，需要使用"),t("code",[r._v("-it")]),r._v("来启动交互式容器，对于redis这种需要后台默默运行的。我们使用"),t("code",[r._v("-d")]),r._v("来启动守护式容器。")]),r._v(" "),t("h2",{attrs:{id:"_2、查看容器日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、查看容器日志"}},[r._v("#")]),r._v(" 2、查看"),t("strong",[r._v("容器日志")])]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker logs 容器ID")])]),r._v(" "),t("h2",{attrs:{id:"_3、查看容器内运行的进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、查看容器内运行的进程"}},[r._v("#")]),r._v(" 3、查看"),t("strong",[r._v("容器内运行的进程")])]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker top 容器ID")])]),r._v(" "),t("h2",{attrs:{id:"_4、查看容器内部细节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、查看容器内部细节"}},[r._v("#")]),r._v(" 4、查看"),t("strong",[r._v("容器内部细节")])]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker inspect 容器ID")])]),r._v(" "),t("h2",{attrs:{id:"_5、进入容器并命令交互"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、进入容器并命令交互"}},[r._v("#")]),r._v(" 5、进入容器并命令交互")]),r._v(" "),t("p",[r._v("命令格式："),t("code",[r._v("docker exec -it 容器ID bashShell")]),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-36.png",alt:""}}),t("br"),r._v("还有一种进入方式是"),t("code",[r._v("docker attach 容器ID")]),t("br"),r._v("那么这两者有什么区别？"),t("br"),r._v("使用attach 直接进入容器启动命令的终端，不会启动新的进程，当使用exit退出，会导致容器的停止。"),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-37.png",alt:""}}),t("br"),r._v("使用exec 是在容器中打开新的终端，并且可以启动新的进程，用exit退出时，不会导致容器的停止。"),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-38.png",alt:""}}),t("br"),r._v("推荐使用 docker exec 命令，因为退出容器终端，不会导致容器的停止。")]),r._v(" "),t("h2",{attrs:{id:"_6、从容器内拷贝文件到主机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、从容器内拷贝文件到主机"}},[r._v("#")]),r._v(" 6、从"),t("strong",[r._v("容器内拷贝文件到主机")])]),r._v(" "),t("p",[r._v("注意文件传输方向是从容器到主机。"),t("br"),r._v("命令格式："),t("code",[r._v("docker cp 容器ID:容器内路径 目的主机路径")]),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-39.png",alt:""}})]),r._v(" "),t("h2",{attrs:{id:"_7、导入和导出容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、导入和导出容器"}},[r._v("#")]),r._v(" 7、导入和导出容器")]),r._v(" "),t("p",[t("code",[r._v("export")]),r._v("导出容器的内容留作为一个tar归档文件"),t("br"),t("code",[r._v("import")]),r._v("从tar包中的内容创建一个新的文件系统再导入为镜像")]),r._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[r._v("docker")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[r._v("export")]),r._v(" 容器ID "),t("span",{pre:!0,attrs:{class:"token operator"}},[r._v(">")]),r._v(" 文件名.tar\n")])]),r._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[r._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-40.png",alt:""}})]),r._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[r._v("cat")]),r._v(" 文件名.tar "),t("span",{pre:!0,attrs:{class:"token operator"}},[r._v("|")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[r._v("docker")]),r._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[r._v("import")]),r._v(" - 镜像用户/镜像名:镜像版本号\n")])]),r._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[r._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-41.png",alt:""}})]),r._v(" "),t("h1",{attrs:{id:"五、总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、总结"}},[r._v("#")]),r._v(" 五、总结")]),r._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-42.png",alt:""}})]),r._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[r._v("各字段说明：")]),t("p",[t("strong",[r._v("attach")]),t("br"),r._v("    Attach to a running container                 # 当前 shell 下 attach 连接指定运行镜像"),t("br"),t("strong",[r._v("build")]),t("br"),r._v("     Build an image from a Dockerfile              # 通过 Dockerfile 定制镜像"),t("br"),t("strong",[r._v("commit")]),t("br"),r._v("    Create a new image from a container changes   # 提交当前容器为新的镜像"),t("br"),t("strong",[r._v("cp")]),t("br"),r._v("        Copy files/folders from the containers filesystem to the host path   #从容器中拷贝指定文件或者目录到宿主机中"),t("br"),t("strong",[r._v("create")]),t("br"),r._v("    Create a new container                        # 创建一个新的容器，同 run，但不启动容器"),t("br"),t("strong",[r._v("diff")]),t("br"),r._v("      Inspect changes on a container's filesystem   # 查看 docker 容器变化"),t("br"),t("strong",[r._v("events")]),t("br"),r._v("    Get real time events from the server          # 从 docker 服务获取容器实时事件"),t("br"),t("strong",[r._v("exec")]),t("br"),r._v("      Run a command in an existing container        # 在已存在的容器上运行命令"),t("br"),t("strong",[r._v("export")]),t("br"),r._v("    Stream the contents of a container as a tar archive   # 导出容器的内容流作为一个 tar 归档文件[对应 import ]"),t("br"),t("strong",[r._v("history")]),t("br"),r._v("   Show the history of an image                  # 展示一个镜像形成历史"),t("br"),t("strong",[r._v("images")]),t("br"),r._v("    List images                                   # 列出系统当前镜像"),t("br"),t("strong",[r._v("import")]),t("br"),r._v("    Create a new filesystem image from the contents of a tarball # 从tar包中的内容创建一个新的文件系统映像（对应export）"),t("br"),t("strong",[r._v("info")]),t("br"),r._v("      Display system-wide information               # 显示系统相关信息"),t("br"),t("strong",[r._v("inspect")]),t("br"),r._v("   Return low-level information on a container   # 查看容器详细信息"),t("br"),t("strong",[r._v("kill")]),t("br"),r._v("      Kill a running container                      # kill 指定 docker 容器"),t("br"),t("strong",[r._v("load")]),t("br"),r._v("      Load an image from a tar archive              # 从一个 tar 包中加载一个镜像[对应 save]"),t("br"),t("strong",[r._v("login")]),t("br"),r._v("     Register or Login to the docker registry server    # 注册或者登陆一个 docker 源服务器"),t("br"),t("strong",[r._v("logout")]),t("br"),r._v("    Log out from a Docker registry server          # 从当前 Docker registry 退出"),t("br"),t("strong",[r._v("logs")]),t("br"),r._v("      Fetch the logs of a container                 # 输出当前容器日志信息"),t("br"),t("strong",[r._v("port")]),t("br"),r._v("      Lookup the public-facing port which is NAT-ed to PRIVATE_PORT    # 查看映射端口对应的容器内部源端口"),t("br"),t("strong",[r._v("pause")]),t("br"),r._v("     Pause all processes within a container        # 暂停容器"),t("br"),t("strong",[r._v("ps")]),t("br"),r._v("        List containers                               # 列出容器列表"),t("br"),t("strong",[r._v("pull")]),t("br"),r._v("      Pull an image or a repository from the docker registry server   # 从docker镜像源服务器拉取指定镜像或者库镜像"),t("br"),t("strong",[r._v("push")]),t("br"),r._v("      Push an image or a repository to the docker registry server    # 推送指定镜像或者库镜像至docker源服务器"),t("br"),t("strong",[r._v("restart")]),t("br"),r._v("   Restart a running container                   # 重启运行的容器"),t("br"),t("strong",[r._v("rm")]),t("br"),r._v("        Remove one or more containers                 # 移除一个或者多个容器"),t("br"),t("strong",[r._v("rmi")]),t("br"),r._v("       Remove one or more images       # 移除一个或多个镜像[无容器使用该镜像才可删除，否则需删除相关容器才可继续或 -f 强制删除]"),t("br"),t("strong",[r._v("run")]),t("br"),r._v("       Run a command in a new container              # 创建一个新的容器并运行一个命令"),t("br"),t("strong",[r._v("save")]),t("br"),r._v("      Save an image to a tar archive                # 保存一个镜像为一个 tar 包[对应 load]"),t("br"),t("strong",[r._v("search")]),t("br"),r._v("    Search for an image on the Docker Hub         # 在 docker hub 中搜索镜像"),t("br"),t("strong",[r._v("start")]),t("br"),r._v("     Start a stopped containers                    # 启动容器"),t("br"),t("strong",[r._v("stop")]),t("br"),r._v("      Stop a running containers                     # 停止容器"),t("br"),t("strong",[r._v("tag")]),t("br"),r._v("       Tag an image into a repository                # 给源中镜像打标签"),t("br"),t("strong",[r._v("top")]),t("br"),r._v("       Lookup the running processes of a container   # 查看容器中运行的进程信息"),t("br"),t("strong",[r._v("unpause")]),t("br"),r._v("   Unpause a paused container                    # 取消暂停容器"),t("br"),t("strong",[r._v("version")]),t("br"),r._v("   Show the docker version information           # 查看 docker 版本号"),t("br"),t("strong",[r._v("wait")]),t("br"),r._v("     Block until a container stops, then print its exit code   # 截取容器停止时的退出状态值")])])])}),[],!1,null,null,null);t.default=a.exports}}]);