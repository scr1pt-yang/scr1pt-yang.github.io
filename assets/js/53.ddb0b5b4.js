(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{464:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("hr"),t._v(" "),s("h2",{attrs:{id:"一、反向代理实例一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、反向代理实例一"}},[t._v("#")]),t._v(" 一、反向代理实例一")]),t._v(" "),s("p",[t._v("实现效果：使用 nginx 反向代理，访问 www.123.com 直接跳转到 linux 系统 tomcat 主页面中。")]),t._v(" "),s("h3",{attrs:{id:"_1、准备工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、准备工作"}},[t._v("#")]),t._v(" 1、准备工作")]),t._v(" "),s("p",[t._v("在linux系统安装tomcat，使用默认端口8080；tomcat包在官网即可下载，导入linux系统使用"),s("code",[t._v("tar -xvf")]),t._v("命令进行解压，进入tomcat的bin目录使用"),s("code",[t._v("./startup.sh")]),t._v("启动tomcat服务器。"),s("br"),t._v("\n设置防火墙，对外开启8080端口，"),s("code",[t._v("firewall-cmd --add-port=8080/tcp --permanent")]),t._v(" 重启防火墙 "),s("code",[t._v("firewall-cmd –reload")]),s("br"),t._v("\n在浏览器输入"),s("code",[t._v("http://linux服务器IP地址:8080")]),t._v("，访问到tomcat主页。"),s("br"),t._v(" "),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/nginx-7.png",alt:"image.png"}}),s("br"),t._v("\n此时访问服务器ip地址的8080端口可访问到tomcat，但若需使用域名加端口号的方式进行访问则必须通过域名与IP地址的解析转换，有两种方式，一种是通过公网DNS服务器解析域名，查找对应IP地址进行访问，另一种是修改本地主机的hosts文件，添加IP地址和域名的对应关系。例如以下写入配置。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("192.168.139.27   www.123.com\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("指定了linux服务器IP192.168.139.27和域名www.123.com的对应关系，这样当浏览器访问www.123.com域名时，会自动查找本地hosts文件找到对应IP192.168.139.27进行访问。"),s("br"),t._v("\n进行上述配置后，在浏览器输入www.123.com:8080即可访问到tomcat主界面，那么如何只需要输入 www.123.com 便可以跳转到 Tomcat 初始界面呢？便需要用到 nginx 的反向代理。")]),t._v(" "),s("h3",{attrs:{id:"_2、配置nginx反向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、配置nginx反向代理"}},[t._v("#")]),t._v(" 2、配置nginx反向代理")]),t._v(" "),s("p",[t._v("在 nginx.conf 配置文件中增加如下配置：")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name\t\twww.123.com"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##指定服务域名")]),t._v("\n\n        location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_pass\t\thttp://127.0.0.1:8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##将来自nginx的请求代理转发到本地8080端口的tomcat服务")]),t._v("\n            index\t\tindex.html index.htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("如上配置，我们监听 80 端口，访问域名为 www.123.com，不加端口号时默认为 80 端口，故访问该域名时会跳转到 127.0.0.1:8080 路径上。在浏览器端输入 www.123.com 结果如下："),s("br"),t._v(" "),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/nginx-8.png",alt:"image.png"}})]),t._v(" "),s("h2",{attrs:{id:"二、反向代理实例二"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、反向代理实例二"}},[t._v("#")]),t._v(" 二、反向代理实例二")]),t._v(" "),s("p",[t._v("实现效果：使用 nginx 反向代理，根据访问的路径跳转到不同端口的服务中。"),s("br"),t._v("\nnginx 监听端口改为 9001"),s("br"),t._v("\n访问"),s("code",[t._v("http://服务器IP地址:9001/edu/")]),t._v("直接跳转到 "),s("code",[t._v("服务器IP地址:8081")]),s("br"),t._v("\n访问"),s("code",[t._v("http://服务器IP地址:9001/vod/")]),t._v("直接跳转到 "),s("code",[t._v("服务器IP地址:8082")])]),t._v(" "),s("h3",{attrs:{id:"_1、准备工作-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、准备工作-2"}},[t._v("#")]),t._v(" 1、准备工作")]),t._v(" "),s("p",[t._v("准备两个 tomcat，一个 8001 端口，一个 8002 端口，并准备好测试的页面。"),s("br"),t._v("\n在tomcat1文件夹内"),s("code",[t._v("conf/server.xml")]),t._v("文件，修改其"),s("code",[t._v("port=8081")]),t._v("，webapps目录下创建edu目录，在该目录下创建a.html，写入8081！！"),s("br"),t._v("\n在tomcat2文件夹内conf/server.xml文件，修改其"),s("code",[t._v("port=8082")]),t._v("，webapps目录下创建vod目录，在该目录下创建b.html，写入8082！！"),s("br"),t._v("\n测试"),s("code",[t._v("http://服务器IP地址1:8081")]),t._v("和"),s("code",[t._v("http://服务器IP地址2:8082")]),t._v("都能访问通即可。")]),t._v(" "),s("h3",{attrs:{id:"_2、配置nginx反向代理-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、配置nginx反向代理-2"}},[t._v("#")]),t._v(" 2、配置nginx反向代理")]),t._v(" "),s("p",[t._v("修改nginx配置文件，在 http 块中添加 server{}")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlisten\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tserver_name\t\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".139.27"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##指定服务器IP地址")]),t._v("\n\n\t\tlocation ~ /edu/ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tproxy_pass\t\thttp://192.168.139.27:8081"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\tlocation ~ /vod/ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tproxy_pass\t\thttp://192.168.139.27:8082"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("浏览器访问"),s("code",[t._v("http://192.168.139.27:9001/edu/a.html")]),t._v("跳转到8081！！"),s("br"),t._v("\n浏览器访问"),s("code",[t._v("http://192.168.139.27:9001/vod/b.html")]),t._v("跳转到8082！！")]),t._v(" "),s("h3",{attrs:{id:"_3、location指令说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、location指令说明"}},[t._v("#")]),t._v(" 3、location指令说明")]),t._v(" "),s("p",[t._v("该指令用于匹配 URL。")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("location "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ~ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("~* "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("^~ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" uri "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("1、= ：用于不含正则表达式的 uri 前，要求请求字符串与 uri 严格匹配，如果匹配成功，就停止继续向下搜索并立即处理该请求。"),s("br"),t._v("\n2、~：用于表示 uri 包含正则表达式，并且区分大小写。"),s("br"),t._v("\n3、~*：用于表示 uri 包含正则表达式，并且不区分大小写。"),s("br"),t._v("\n4、^~：用于不含正则表达式的 uri 前，要求 Nginx 服务器找到标识 uri 和请求字符串匹配度最高的 location 后，立即使用此 location 处理请求，而不再使用 location 块中的正则 uri 和请求字符串做匹配。"),s("br"),t._v("\n注意：如果 uri 包含正则表达式，则必须要有 ~ 或者 ~* 标识。")])])}),[],!1,null,null,null);s.default=e.exports}}]);