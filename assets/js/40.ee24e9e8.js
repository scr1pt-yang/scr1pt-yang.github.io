(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{454:function(s,a,t){"use strict";t.r(a);var e=t(2),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("hr"),s._v(" "),a("h1",{attrs:{id:"一、前提说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、前提说明"}},[s._v("#")]),s._v(" 一、前提说明")]),s._v(" "),a("p",[s._v("Docker并非是一个通用的容器工具，它依赖于已存在并运行的Linux内核环境。"),a("br"),s._v("Docker实质上是在已经运行的Linux下制造了一个隔离的文件环境，因此它执行的效率集合等同于所部署的Linux主机。因此，Docker必须部署在Linux内核的系统上。如果其他系统想部署Docker就必须安装一个虚拟Linux环境。"),a("br"),s._v("在Windows上部署Docker的方法都是先安装一个虚拟机，并在安装Linux系统的虚拟机中运行Docker。"),a("br"),a("strong",[s._v("前提条件：")]),a("br"),s._v("目前，CentOS 仅发行版本中的内核支持 Docker。Docker 运行在CentOS 7 (64-bit)上，要求系统为64位、Linux系统内核版本为 3.8以上，这里选用Centos7.x"),a("br"),s._v("查看自己Linux系统的内核：uname命令用于打印当前系统相关信息（内核版本号、硬件架构、主机名称和操作系统类型等）。"),a("br"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-11.png",alt:"image.png"}})]),s._v(" "),a("h1",{attrs:{id:"二、安装步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、安装步骤"}},[s._v("#")]),s._v(" 二、安装步骤")]),s._v(" "),a("h2",{attrs:{id:"_1、卸载旧版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、卸载旧版本"}},[s._v("#")]),s._v(" 1、卸载旧版本")]),s._v(" "),a("p",[s._v("旧版本的Docker使用"),a("code",[s._v("docker")]),s._v("或 "),a("code",[s._v("docker-engine")]),s._v("。在尝试安装新版本以及相关的依赖项之前，需要先卸载任何此类旧版本。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum remove "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-client-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-common "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-latest-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-logrotate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n                  docker-engine\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"_2、yum安装gcc相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、yum安装gcc相关"}},[s._v("#")]),s._v(" 2、yum安装gcc相关")]),s._v(" "),a("p",[s._v("GCC是一套开源的编译器工具集，用于将源代码编译为可执行文件。安装GCC主要是为了满足Docker的构建需求。在构建Docker镜像时，可能会涉及到编译一些源代码或者构建一些依赖库。这些操作可能需要使用C、C++等编程语言，并且需要通过GCC来进行编译。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gcc\nyum "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gcc-c++\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"_3、安装需要的软件包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、安装需要的软件包"}},[s._v("#")]),s._v(" 3、安装需要的软件包")]),s._v(" "),a("p",[s._v("在新主机上首次安装Docker Engine之前，您、需要设置Docker存储库。之后，我们可以从存储库中安装和更新Docker。"),a("br"),s._v("安装"),a("code",[s._v("yum-utils")]),s._v("包（它提供了"),a("code",[s._v("yum-config-manager")]),s._v("实用程序）并设置存储库。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" yum-utils\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"_4、设置yum镜像源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、设置yum镜像源"}},[s._v("#")]),s._v(" 4、设置yum镜像源")]),s._v(" "),a("p",[s._v("Docker官方文档在这一步给出了官方的yum源地址：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("但是官方的yum源是在国外的，我们在使用时经常会出现网络不通的情况，例如：")]),s._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"title"}),a("p",[s._v("报错："),a("br"),s._v("1   [Errno 14] curl#35 - TCP connection reset by peer"),a("br"),s._v("2   [Errno 12] curl#35 - Timeout")])]),a("p",[s._v("因此在这里我们选择使用国内的阿里云镜像源，主要解决下载速度的问题。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-12.png",alt:"image.png"}})]),s._v(" "),a("h2",{attrs:{id:"_5、更新yum软件包索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、更新yum软件包索引"}},[s._v("#")]),s._v(" 5、更新yum软件包索引")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum makecache fast\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"_6、安装docker-ce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、安装docker-ce"}},[s._v("#")]),s._v(" 6、安装Docker CE")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce docker-ce-cli containerd.io\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-13.png",alt:"image.png"}}),a("br"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-14.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"_7、启动docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、启动docker"}},[s._v("#")]),s._v(" 7、启动Docker")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("systemctl start "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"_8、测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、测试"}},[s._v("#")]),s._v(" 8、测试")]),s._v(" "),a("p",[s._v("通过运行"),a("code",[s._v("hello-world")]),s._v("镜像验证Docker引擎安装是否成功。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run hello-world\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("此命令下载测试映像并在容器中运行。当容器运行时，它会打印一条确认消息并退出。"),a("br"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-15.png",alt:"image.png"}})]),s._v(" "),a("h2",{attrs:{id:"_9、卸载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、卸载"}},[s._v("#")]),s._v(" 9、卸载")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭docker服务")]),s._v("\nsystemctl stop "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 卸载docker")]),s._v("\nyum remove docker-ce docker-ce-cli containerd.io\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 主机上的镜像、容器、卷或自定义配置文件不会自动删除。要删除所有镜像、容器和卷，需要执行以下操作：")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" /var/lib/docker\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" /var/lib/containerd\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h1",{attrs:{id:"三、阿里云镜像加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、阿里云镜像加速"}},[s._v("#")]),s._v(" 三、阿里云镜像加速")]),s._v(" "),a("p",[s._v("docker下载镜像默认的路径速度会比较慢，因此可以选择添加阿里云的镜像加速，注意这里可以理解为是给docker配置的，而前边的换源是为yum换的，两者有区别。"),a("br"),s._v("首先注册一个自己的阿里云账户，步骤此处省略，我们登录到阿里云开发者平台。"),a("br"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-16.png",alt:"image.png"}}),a("br"),s._v("点击控制台，左上角产品与服务中选择容器镜像服务。"),a("br"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-17.png",alt:"image.png"}}),a("br"),s._v("点击左侧目录镜像加速器即可看到属于自己的镜像加速器地址。"),a("br"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-18.png",alt:"image.png"}}),a("br"),s._v("在linux中使用如下命令进行配置：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建对应目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /etc/docker\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建daemon.json文件并追加以下内容")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/docker/daemon.json \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"registry-mirrors"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://aa25jngu.mirror.aliyuncs.com"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nEOF\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-19.png",alt:"image.png"}}),a("br"),s._v("至此镜像加速配置已完成，重启让配置生效。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("systemctl daemon-reload\nsystemctl restart "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h1",{attrs:{id:"四、永远的helloworld"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、永远的helloworld"}},[s._v("#")]),s._v(" 四、永远的HelloWorld")]),s._v(" "),a("p",[s._v("启动Docker后台容器(测试运行 hello-world)")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run hello-world\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-20.png",alt:"image.png"}}),a("br"),s._v("输出这段提示以后，hello world就会停止运行，容器自动终止。"),a("br"),s._v("那么run究竟干了什么？"),a("br"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-21.png",alt:"image.png"}})]),s._v(" "),a("h1",{attrs:{id:"五、底层原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、底层原理"}},[s._v("#")]),s._v(" 五、底层原理")]),s._v(" "),a("p",[s._v("为什么Docker会比VM虚拟机快？"),a("br"),a("strong",[s._v("（1）docker有着比虚拟机更少的抽象层")]),a("br"),s._v("由于docker不需要Hypervisor(虚拟机)实现硬件资源虚拟化,运行在docker容器上的程序直接使用的都是实际物理机的硬件资源。因此在CPU、内存利用率上docker将会在效率上有明显优势。"),a("br"),a("strong",[s._v("（2）docker利用的是宿主机的内核,而不需要加载操作系统OS内核")]),a("br"),s._v("当新建一个容器时,docker不需要和虚拟机一样重新加载一个操作系统内核。进而避免引寻、加载操作系统内核返回等比较费时费资源的过程,当新建一个虚拟机时,虚拟机软件需要加载OS,返回新建过程是分钟级别的。而docker由于直接利用宿主机的操作系统,则省略了返回过程,因此新建一个docker容器只需要几秒钟。"),a("br"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-22.png",alt:"image.png"}}),a("br"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-23.png",alt:"image.png"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);