(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{493:function(e,s,t){"use strict";t.r(s);var r=t(2),a=Object(r.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("hr"),e._v(" "),s("p",[e._v("Redis 存储数据的 Value 可以是一个 Set 集合，且集合中的每一个元素均 String 类型。Set与 List 非常相似，但不同之处是 Set 中的元素具有无序性与不可重复性，而List 则具有有序性与可重复性。"),s("br"),e._v("Redis 中的 Set 集合与 Java 中的 Set 集合的实现相似，其底层都是value 为 null 的 hash表。也正因为此，才会引发无序性与不可重复性。")]),e._v(" "),s("h1",{attrs:{id:"一、sadd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、sadd"}},[e._v("#")]),e._v(" 一、sadd")]),e._v(" "),s("p",[e._v("●  格式："),s("code",[e._v("SADD key member [member ...]")]),s("br"),e._v("●  功能：将一个或多个 member  元素加入到集合 key  当中，已经存在于集合的 member元素将被忽略。"),s("br"),e._v("●  说明：假如 key  不存在，则创建一个只包含 member  元素作成员的集合。当 key  不是集合类型时，返回一个错误。")]),e._v(" "),s("h1",{attrs:{id:"二、smembers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、smembers"}},[e._v("#")]),e._v(" 二、smembers")]),e._v(" "),s("p",[e._v("●  格式："),s("code",[e._v("SMEMBERS key")]),s("br"),e._v("●  功能：返回集合 key  中的所有成员。"),s("br"),e._v("●  说明：不存在的 key  被视为空集合。若 key 中包含大量元素，则该命令可能会阻塞 Redis服务。所以生产环境中一般不使用该命令，而使用 sscan 命令代替。")]),e._v(" "),s("h1",{attrs:{id:"三、scard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、scard"}},[e._v("#")]),e._v(" 三、scard")]),e._v(" "),s("p",[e._v("●  格式："),s("code",[e._v("SCARD key")]),s("br"),e._v("●  功能：返回 Set 集合的长度"),s("br"),e._v("●  说明：当 key  不存在时，返回 0 。")]),e._v(" "),s("h1",{attrs:{id:"四、sismember"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、sismember"}},[e._v("#")]),e._v(" 四、sismember")]),e._v(" "),s("p",[e._v("●  格式："),s("code",[e._v("SISMEMBER key member")]),s("br"),e._v("●  功能：判断 member  元素是否集合 key  的成员。"),s("br"),e._v("●  说明：如果 member  元素是集合的成员，返回 1  。如果 member  元素不是集合的成员，或 key  不存在，返回 0。")]),e._v(" "),s("h1",{attrs:{id:"五、smove"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、smove"}},[e._v("#")]),e._v(" 五、smove")]),e._v(" "),s("p",[e._v("●  格式："),s("code",[e._v("SMOVE source destination member")]),s("br"),e._v("●  功能：将 member  元素从 source  集合移动到 destination  集合。"),s("br"),e._v("●  说明：如果 source  集合不存在或不包含指定的 member  元素，则 SMOVE  命令不执行任何操作，仅返回 0  。否则， member  元素从 source集合中被移除，并添加到 destination  集合中去，返回 1。当 destination  集合已经包含 member  元素时，SMOVE命令只是简单地将 source  集合中的 member  元素删除。当 source  或 destination  不是集合类型时，返回一个错误。")]),e._v(" "),s("h1",{attrs:{id:"六、srem"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、srem"}},[e._v("#")]),e._v(" 六、srem")]),e._v(" "),s("p",[e._v("●  格式："),s("code",[e._v("SREM key member [member ...]")]),s("br"),e._v("●  功能：移除集合 key  中的一个或多个 member  元素，不存在的 member  元素会被忽略，且返回成功移除的元素个数。"),s("br"),e._v("●  说明：当 key  不是集合类型，返回一个错误。")]),e._v(" "),s("h1",{attrs:{id:"七、srandmember"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、srandmember"}},[e._v("#")]),e._v(" 七、srandmember")]),e._v(" "),s("p",[e._v("●  格式："),s("code",[e._v("SRANDMEMBER key [count]")]),s("br"),e._v("●  功能：返回集合中的 count 个随机元素。count 默认值为 1。"),s("br"),e._v("●  说明：若 count  为正数，且小于集合长度，那么返回一个包含 count  个元素的数组，数组中的元素各不相同。如果 count  大于等于集合长度，那么返回整个集合。如果count  为负数，那么返回一个包含 count  绝对值个元素的数组，但数组中的元素可能会出现重复。")]),e._v(" "),s("h1",{attrs:{id:"八、spop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、spop"}},[e._v("#")]),e._v(" 八、spop")]),e._v(" "),s("p",[e._v("●  格式："),s("code",[e._v("SPOP key [count]")]),s("br"),e._v("●  功能：移除并返回集合中的 count 个随机元素。count 必须为正数，且默认值为 1。"),s("br"),e._v("●  说明：如果 count  大于等于集合长度，那么移除并返回整个集合。")]),e._v(" "),s("h1",{attrs:{id:"九、sdiff-sdiffstore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#九、sdiff-sdiffstore"}},[e._v("#")]),e._v(" 九、sdiff / sdiffstore")]),e._v(" "),s("p",[e._v("●  格式："),s("code",[e._v("SDIFF key [key ...] 或 SDIFFSTORE destination key [key ...]")]),s("br"),e._v("●  功能：返回第一个集合与其它集合之间的差集。差集，difference。"),s("br"),e._v("●  说明：这两个命令的不同之处在于，sdiffstore 不仅能够显示差集，还能将差集存储到指定的集合 destination 中。如果 destination集合已经存在，则将其覆盖。不存在的 key  被视为空集。")]),e._v(" "),s("h1",{attrs:{id:"十、sinter-sinterstore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十、sinter-sinterstore"}},[e._v("#")]),e._v(" 十、sinter / sinterstore")]),e._v(" "),s("p",[e._v("●  格式："),s("code",[e._v("SINTER key [key ...] 或 SINTERSTORE destination key [key ...]")]),s("br"),e._v("●  功能：返回多个集合间的交集。交集，intersection。"),s("br"),e._v("●  说明：这两个命令的不同之处在于，sinterstore 不仅能够显示交集，还能将交集存储到指定的集合 destination 中。如果 destination 集合已经存在，则将其覆盖。不存在的 key被视为空集。")]),e._v(" "),s("h1",{attrs:{id:"十一、sunion-sunionstore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十一、sunion-sunionstore"}},[e._v("#")]),e._v(" 十一、sunion / sunionstore")]),e._v(" "),s("p",[e._v("●  格式："),s("code",[e._v("SUNION key [key ...] 或 SUNIONSTORE destination key [key ...]")]),s("br"),e._v("●  功能：返回多个集合间的并集。并集，union。"),s("br"),e._v("●  说明：这两个命令的不同之处在于，sunionstore 不仅能够显示并集，还能将并集存储到指定的集合 destination 中。如果 destination 集合已经存在，则将其覆盖。不存在的 key被视为空集。")]),e._v(" "),s("h1",{attrs:{id:"十二、应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十二、应用场景"}},[e._v("#")]),e._v(" 十二、应用场景")]),e._v(" "),s("p",[e._v("Value 为 Set 类型的应用场景很多，这里对这些场景仅进行总结。")]),e._v(" "),s("h2",{attrs:{id:"_1、动态黑白名单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、动态黑白名单"}},[e._v("#")]),e._v(" 1、动态黑白名单")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-86.png",alt:"image.png"}}),s("br"),e._v("例如某服务器中要设置用于访问控制的黑名单。如果直接将黑名单写入服务器的配置文件，那么存在的问题是，无法动态修改黑名单。此时可以将黑名单直接写入Redis，只要有客户端来访问服务器，服务器在获取到客户端IP 后先从Redis 的黑名单中查看是否存在该IP，如果存在，则拒绝访问，否则访问通过。")]),e._v(" "),s("h2",{attrs:{id:"_2、有限随机数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、有限随机数"}},[e._v("#")]),e._v(" 2、有限随机数")]),e._v(" "),s("p",[e._v("有限随机数是指返回的随机数是基于某一集合范围内的随机数，例如抽奖、随机选人。通过 spop 或 srandmember 可以实现从指定集合中随机选出元素。")]),e._v(" "),s("h2",{attrs:{id:"_3、用户画像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、用户画像"}},[e._v("#")]),e._v(" 3、用户画像")]),e._v(" "),s("p",[e._v("社交平台、电商平台等各种需要用户注册登录的平台，会根据用户提供的资料与用户使用习惯，为每个用户进行画像，即为每个用户定义很多可以反映该用户特征的标签，这些标签就可以使用sadd 添加到该用户对应的集合中。这些标签具有无序、不重复特征。"),s("br"),e._v("同时平台还可以使用 sinter/sinterstore 根据用户画像间的交集进行好友推荐、商品推荐、客户推荐等。")])])}),[],!1,null,null,null);s.default=a.exports}}]);