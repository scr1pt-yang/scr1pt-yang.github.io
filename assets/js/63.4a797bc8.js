(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{475:function(a,s,t){"use strict";t.r(s);var r=t(2),n=Object(r.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("hr"),a._v(" "),s("h1",{attrs:{id:"一、mq的相关概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、mq的相关概念"}},[a._v("#")]),a._v(" 一、MQ的相关概念")]),a._v(" "),s("h2",{attrs:{id:"_1、什么是mq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、什么是mq"}},[a._v("#")]),a._v(" 1、什么是MQ")]),a._v(" "),s("p",[a._v("MQ(message queue)，从字面意思上看，本质是个队列，FIFO 先进先出，只不过队列中存放的内容是 message 而已，这是一种跨进程的通信机制，多用于系统之间的异步通信。在互联网架构中，MQ 是一种非常常见的上下游“逻辑解耦+物理解耦”的消息通信服务。使用了 MQ 之后，消息发送上游只需要依赖 MQ，不用依赖其他服务。"),s("br"),a._v("MQ通过典型的生产者和消费者模型，生产者不断向消息队列中生产消息，消费者不断的从队列中获取消息。因为消息的生产和消费都是异步的，而且只关心消息的发送和接收，没有业务逻辑的侵入,轻松的实现系统间解耦。")]),a._v(" "),s("h2",{attrs:{id:"_2、mq应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、mq应用场景"}},[a._v("#")]),a._v(" 2、MQ应用场景")]),a._v(" "),s("h3",{attrs:{id:"_1-应用解耦"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-应用解耦"}},[a._v("#")]),a._v(" 1.应用解耦")]),a._v(" "),s("p",[a._v("以电商应用为例，应用中有订单系统、库存系统、物流系统、支付系统。用户创建订单后，如果耦合调用库存系统、物流系统、支付系统，任何一个子系统出了故障，都会造成下单操作异常。当转变成基于消息队列的方式后，系统间调用的问题会减少很多，如下图中订单系统将消息先发送到 MQ 中，MQ 再转发到其他系统。如果此时库存系统出现故障，不会影响整个下单操作，当库存系统恢复后，继续处理订单信息即可；并且如果需求修改，新增了一个 X 系统，此时无需修改订单系统的代码，只需修改 MQ 将消息发送给 X 系统即可。"),s("br"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/rabbitmq-1.png",alt:"image.png"}})]),a._v(" "),s("h3",{attrs:{id:"_2-流量消峰"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-流量消峰"}},[a._v("#")]),a._v(" 2.流量消峰")]),a._v(" "),s("p",[a._v("举个例子，如果订单系统最多能处理一万次订单，这个处理能力应付正常时段的下单时绰绰有余，正常时段我们下单一秒后就能返回结果。但是在高峰期，如果有两万次下单操作系统是处理不了的，只能限制订单超过一万后不允许用户下单。但是这种情况对于用户来说是很不友好的。"),s("br"),a._v("通过使用消息队列做缓冲，我们可以取消这个限制，把一秒内下的订单分散成一段时间来处理，这时有些用户可能在下单十几秒后才能收到下单成功的操作，但是比不能下单的体验要好。")]),a._v(" "),s("h3",{attrs:{id:"_3-异步处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-异步处理"}},[a._v("#")]),a._v(" 3.异步处理")]),a._v(" "),s("p",[a._v("有些服务间的调用是可以异步的，例如 A 调用 B，B 需要花费很长时间执行，但是 A 需要知道 B 什么时候可以执行完，以前一般有两种方式，A 过一段时间去调用 B 的查询 api 查询。或者 A 提供一个 callback api， B 执行完之后调用 api 通知 A 服务。这两种方式都不是很优雅，通过使用消息队列，可以很方便解决这个问题， A 调用 B 服务后，只需要监听 B 处理完成的消息，当 B 处理完成后，会发送一条消息给 MQ，MQ 会将此消息转发给 A 服务。这样 A 服务既不用循环调用 B 的查询 api，也不用提供 callback api。同样 B 服务也不用做这些操作。A 服务还能及时的得到异步处理成功的消息。"),s("br"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/rabbitmq-2.png",alt:"image.png"}})]),a._v(" "),s("h2",{attrs:{id:"_3、mq的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、mq的分类"}},[a._v("#")]),a._v(" 3、MQ的分类")]),a._v(" "),s("h3",{attrs:{id:"_1-activemq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-activemq"}},[a._v("#")]),a._v(" 1.ActiveMQ")]),a._v(" "),s("p",[a._v("ActiveMQ 是由 Apache 出品，一款能力强劲的开源消息总线。它是一个完全支持 JMS 规范的的消息中间件。提供丰富的API，多种集群架构模式让 ActiveMQ 在业界成为老牌的消息中间件，在中小型企业颇受欢迎。")]),a._v(" "),s("ul",[s("li",[a._v("优点：单机吞吐量万级，时效性 ms 级，可用性高，基于主从架构实现高可用性，消息可靠性较低的概率丢失数据。")]),a._v(" "),s("li",[a._v("缺点：官方社区现在对 ActiveMQ 5.x 维护越来越少，高吞吐量场景较少使用。")])]),a._v(" "),s("h3",{attrs:{id:"_2-kafka"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-kafka"}},[a._v("#")]),a._v(" 2.Kafka")]),a._v(" "),s("p",[a._v("Kafka 是 LinkedIn开源的分布式发布-订阅消息系统，目前归属于Apache顶级项目。Kafka主要特点是基于Pull的模式来处理消息消费，追求高吞吐量，适合产生大量数据的互联网服务的数据收集业务。是大数据的杀手锏，谈到大数据领域内的消息传输，则绕不开Kafka，这款为大数据而生的消息中间件，以其"),s("strong",[a._v("百万级TPS")]),a._v("的吞吐量名声大噪，迅速成为大数据领域的宠儿，在数据采集、传输、存储的过程中发挥着举足轻重的作用。目前已经被LinkedIn，Uber, Twitter, Netflix等大公司所采纳。")]),a._v(" "),s("ul",[s("li",[a._v("优点:  性能卓越，单机写入 TPS 约在百万条/秒，最大的优点，就是"),s("strong",[a._v("吞吐量高")]),a._v("。时效性 ms 级可用性非常高，kafka 是分布式的，一个数据多个副本，少数机器宕机，不会丢失数据，不会导致不可用，消费者采用 Pull 方式获取消息,  消息有序,  通过控制能够保证所有消息被消费且仅被消费一次；有优秀的第三方 Kafka Web 管理界面 Kafka-Manager；在日志领域比较成熟，被多家公司和多个开源项目使用；功能较为简单，主要支持简单的 MQ 功能，在大数据领域实时计算以及"),s("strong",[a._v("日志采集")]),a._v("被大规模使用。")]),a._v(" "),s("li",[a._v("缺点：Kafka 单机超过 64 个队列/分区，Load 会发生明显的飙高现象，队列越多，load 越高，发送消息响应时间变长，使用短轮询方式，实时性取决于轮询间隔时间，消费失败不支持重试；支持消息顺序，但是一台代理宕机后，就会产生消息乱序，社区更新较慢；")])]),a._v(" "),s("h3",{attrs:{id:"_3-rocketmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-rocketmq"}},[a._v("#")]),a._v(" 3.RocketMQ")]),a._v(" "),s("p",[a._v("RocketMQ是阿里开源的消息中间件，它是纯Java开发，具有高吞吐量、高可用性、适合大规模分布式系统应用的特点。RocketMQ思路起源于Kafka，但并不是Kafka的一个Copy，它对消息的可靠传输及事务性做了优化，目前在阿里集团被广泛应用于交易、充值、流计算、消息推送、日志流式处理、binglog分发等场景。")]),a._v(" "),s("ul",[s("li",[a._v("优点："),s("strong",[a._v("单机吞吐量十万级")]),a._v("，可用性非常高，分布式架构，消息可以"),s("strong",[a._v("做到 0 丢失")]),a._v("，MQ 功能较为完善，还是分布式的，扩展性好，"),s("strong",[a._v("支持 10 亿级别的消息堆积")]),a._v("，不会因为堆积导致性能下降，源码是 java。")]),a._v(" "),s("li",[a._v("缺点：支持的"),s("strong",[a._v("客户端语言不多")]),a._v("，目前我了解到有 java 和 c++，其中 c++不成熟；社区活跃度一般，没有在MQ核心中去实现 JMS 等接口，有些系统要迁移需要修改大量代码。")])]),a._v(" "),s("h3",{attrs:{id:"_4-rabbitmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-rabbitmq"}},[a._v("#")]),a._v(" 4.RabbitMQ")]),a._v(" "),s("p",[a._v("RabbitMQ 是使用 Erlang 语言开发的开源消息队列系统，基于 AMQP 协议（高级消息队列协议）来实现。AMQP 的主要特征是面向消息、队列、路由（包括点对点和发布/订阅）、可靠性、安全。AMQP 协议更多用在企业系统内对数据一致性、稳定性和可靠性要求很高的场景，对性能和吞吐量的要求还在其次。")]),a._v(" "),s("ul",[s("li",[a._v("优点：由于 erlang 语言的"),s("strong",[a._v("高并发特性")]),a._v("，性能较好；"),s("strong",[a._v("吞吐量到万级")]),a._v("，MQ 功能比较完备，健壮、稳定、易用、跨平台、"),s("strong",[a._v("支持多种语言")]),a._v("，如：Python、Ruby、.NET、Java、JMS、C、PHP、ActionScript、XMPP、STOMP等，支持 AJAX 文档齐全；开源提供的管理界面非常棒，用起来很好用，"),s("strong",[a._v("社区活跃度高")]),a._v("；更新频率相当高。")]),a._v(" "),s("li",[a._v("缺点：商业版需要收费,学习成本较高。")])]),a._v(" "),s("h2",{attrs:{id:"_4、mq的比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、mq的比较"}},[a._v("#")]),a._v(" 4、MQ的比较")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/rabbitmq-3.png",alt:"image.png"}})]),a._v(" "),s("h2",{attrs:{id:"_5、amqp和jms"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、amqp和jms"}},[a._v("#")]),a._v(" 5、AMQP和JMS")]),a._v(" "),s("p",[s("strong",[a._v("AMQP")]),a._v("，即 Advanced Message Queuing Protocol，一个提供统一消息服务的应用层标准 高级消息队列协议（二进制应用层协议），是应用层协议的一个开放标准，为面向消息的中间件设计。基于此协议的客户端与消息中间件可传递消息，并不受中间件产品、开发语言等条件的限制。类比 HTTP 协议。"),s("br"),s("strong",[a._v("JMS")]),a._v("，即 Java Message Service，是 Java 的消息服务，JMS 的客户端之间可以通过 JMS 服务进行异步的消息传输。JMS API 是一个消息服务的标准或者说是规范，允许应用程序组件基于 JavaEE 平台创建、发送、接收和读取消息。一种规范，和 JDBC、Jedis 担任的角色类似。")]),a._v(" "),s("ul",[s("li",[a._v("JMS 是定义了统一的接口来"),s("strong",[a._v("统一消息操作")]),a._v("；AMQP 通过协议"),s("strong",[a._v("统一数据交换格式。")])]),a._v(" "),s("li",[a._v("JMS 必须使用 Java 语言；AMQP 只是协议，与语言无关（跨语言）。")]),a._v(" "),s("li",[a._v("JMS 规定了两种消息模型（队列模型和发布订阅模型）；AMQP 的消息模型更为丰富。")])]),a._v(" "),s("h1",{attrs:{id:"二、rabbitmq简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、rabbitmq简介"}},[a._v("#")]),a._v(" 二、RabbitMQ简介")]),a._v(" "),s("p",[a._v("RabbitMQ 是一个消息中间件：它接受并转发消息。可以把它当做一个快递站点，当要发送一个包裹时，把包裹先放到快递站，快递员最终会把快递送到收件人那里，按照这种逻辑，RabbitMQ 就是一个快递站，一个快递员帮你传递快件。RabbitMQ 与快递站的主要区别在于，它不处理快件而是接收，存储和转发消息数据。")]),a._v(" "),s("h2",{attrs:{id:"_1、四大组成部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、四大组成部分"}},[a._v("#")]),a._v(" 1、四大组成部分")]),a._v(" "),s("ol",[s("li",[s("strong",[a._v("生产者")]),a._v("：产生数据发送消息的程序是生产者。")]),a._v(" "),s("li",[s("strong",[a._v("交换机")]),a._v("：交换机是RabbitMQ非常重要的一个部件，一方面它接收来自生产者的消息，另一方面它将消息推送到队列中。交换机必须确切的知道如何处理它接收到的消息，是将这些消息推送到特定队列还是推送到多个队列，亦或者是把消息丢弃，这个得由交换机的类型决定。")]),a._v(" "),s("li",[s("strong",[a._v("队列")]),a._v("：队列是RabbitMQ内部使用的一种数据结构，尽管消息流经RabbitMQ和应用程序，但它们只能存储在队列中。队列仅受主机的内存和磁盘限制的约束，本质上是一个大的消息缓冲区。许多生产者可以将消息发送到一个队列，许多消费者可以尝试从一个队列接收数据。")]),a._v(" "),s("li",[a._v("**消费者：**消费与接收具有相似的含义。消费者大多时候是一个等待接收消息的程序。请注意生产者，消费者和消息中间件很多时候并不在同一机器上。同一个应用程序既可以是生产者又是可以是消费者。")])]),a._v(" "),s("h2",{attrs:{id:"_2、rabbitmq核心概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、rabbitmq核心概念"}},[a._v("#")]),a._v(" 2、RabbitMQ核心概念")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/rabbitmq-4.png",alt:"result.png"}})]),a._v(" "),s("h3",{attrs:{id:"_1-producer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-producer"}},[a._v("#")]),a._v(" 1.Producer")]),a._v(" "),s("p",[a._v("消息的生产者。也是一个向交换机发布消息的客户端应用程序。")]),a._v(" "),s("h3",{attrs:{id:"_2-consumer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-consumer"}},[a._v("#")]),a._v(" "),s("strong",[a._v("2.Consumer")])]),a._v(" "),s("p",[a._v("消息的消费者。表示一个从消息队列中取得消息的客户端应用程序。")]),a._v(" "),s("h3",{attrs:{id:"_3-connection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-connection"}},[a._v("#")]),a._v(" "),s("strong",[a._v("3.Connection")])]),a._v(" "),s("p",[a._v("生产者/消费者和 RabbitMQ 服务器之间建立的 TCP 连接。")]),a._v(" "),s("h3",{attrs:{id:"_4-channel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-channel"}},[a._v("#")]),a._v(" "),s("strong",[a._v("4.Channel")])]),a._v(" "),s("p",[a._v("如果每一次访问 RabbitMQ 都建立一个Connection，在消息量大的时候建立 TCP Connection的开销将是巨大的，效率也较低。Channel是在connection内部建立的逻辑连接，如果应用程序支持多线程，通常每个thread创建单独的channel进行通讯，AMQP method包含了channel id 帮助客户端和message broker 识别 channel，所以channel之间是完全隔离的。Channel作为轻量级的Connection极大减少了操作系统建立TCP connection的开销。")]),a._v(" "),s("h3",{attrs:{id:"_5-broker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-broker"}},[a._v("#")]),a._v(" "),s("strong",[a._v("5.Broker")])]),a._v(" "),s("p",[a._v("消息队列服务器实体。即 RabbitMQ 服务器，是接收和分发消息的应用。")]),a._v(" "),s("h3",{attrs:{id:"_6-queue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-queue"}},[a._v("#")]),a._v(" "),s("strong",[a._v("6.Queue")])]),a._v(" "),s("p",[a._v("消息队列。用来"),s("strong",[a._v("保存消息直到发送给消费者")]),a._v("。它是消息的"),s("strong",[a._v("容器")]),a._v("，也是消息的终点。消息一直在队列里面，等待消费者链接到这个队列将其取走。")]),a._v(" "),s("h3",{attrs:{id:"_7-exchange"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-exchange"}},[a._v("#")]),a._v(" "),s("strong",[a._v("7.Exchange")])]),a._v(" "),s("p",[a._v("交换机。用来"),s("strong",[a._v("接收生产者发送的消息")]),a._v("，并根据分发规则，将这些消息分发给服务器中的队列中。"),s("strong",[a._v("不同的交换机有不同的分发规则")]),a._v("。根据分发规则，去匹配查询表中的 routing key，分发消息到queue 中去。")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[a._v("rabbitMQ 交换机类型有4种：")]),a._v(" "),s("ul",[s("li",[a._v("direct(直连)：它会把消息路由到那些 BindingKey RoutingKey完全匹配的队列中。")]),a._v(" "),s("li",[a._v("fanout(扇形)：它会把所有发送到该交换器的消息路由到所有与该交换器绑定的队列中。")]),a._v(" "),s("li",[a._v("topic(主题)：将消息路由到 BindingKey RoutingKey 相匹配的队列中。")]),a._v(" "),s("li",[a._v("headers(标题)：交换器不依赖于路由键的匹配规则来路由消息，而是根据发送的消息内容中headers 属性进行匹配。")])])]),s("p",[a._v("直连交换机（dirext exchange）为 RabbitMQ 默认的交换机。")]),a._v(" "),s("h3",{attrs:{id:"_8-binding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-binding"}},[a._v("#")]),a._v(" 8.Binding")]),a._v(" "),s("p",[a._v("消息队列和交换机之间的虚拟连接，绑定中包含routing key，Binding信息保存到交换机的路由表中，作为消息的分发依据。")]),a._v(" "),s("h3",{attrs:{id:"_9-virtual-host"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-virtual-host"}},[a._v("#")]),a._v(" 9.Virtual Host")]),a._v(" "),s("p",[a._v("虚拟主机。出于多租户和安全因素设计的，把 AMQP 的基本组件划分到一个虚拟的分组中。每个 Virtual Host 本质上就是一个 mini 版的 RabbitMQ 服务器，拥有自己的队列、交换机、绑定和权限机制。类似于网络中的namespace概念。当多个不同的用户使用同一个 RabbitMQ 服务器时，可以划分出多个虚拟主机。每个用户都可以在自己的 vhost 中创建 exchange／queue。RabbitMQ 默认的虚拟主机路径是"),s("code",[a._v("/")])]),a._v(" "),s("h2",{attrs:{id:"_3、rabbitmq工作模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、rabbitmq工作模式"}},[a._v("#")]),a._v(" 3、RabbitMQ工作模式")]),a._v(" "),s("p",[a._v("RabbitMQ 共有六种工作模式：")]),a._v(" "),s("ul",[s("li",[a._v("简单模式（Hello World）")]),a._v(" "),s("li",[a._v("工作队列模式（Work Queue）")]),a._v(" "),s("li",[a._v("发布订阅模式（Publish/Subscribe）")]),a._v(" "),s("li",[a._v("路由模式（Routing）")]),a._v(" "),s("li",[a._v("通配符模式（Topics）")]),a._v(" "),s("li",[a._v("远程调用模式（RPC，不常用)")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/rabbitmq-5.png",alt:"image.png"}})]),a._v(" "),s("h1",{attrs:{id:"三、rabbitmq安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、rabbitmq安装"}},[a._v("#")]),a._v(" 三、RabbitMQ安装")]),a._v(" "),s("h2",{attrs:{id:"_1、安装-erlang"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、安装-erlang"}},[a._v("#")]),a._v(" 1、安装 Erlang")]),a._v(" "),s("p",[a._v("RabbitMQ 是使用 Erlang 语言编写的，所以在安装 RabbitMQ 前需要先安装 Erlang 环境。"),s("br"),s("strong",[a._v("Erlang和RabbitMQ版本对照：")]),s("a",{attrs:{href:"https://www.rabbitmq.com/which-erlang.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.rabbitmq.com/which-erlang.html"),s("OutboundLink")],1),s("br"),a._v("Erlang下载地址："),s("a",{attrs:{href:"https://packagecloud.io/rabbitmq/erlang",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://packagecloud.io/rabbitmq/erlang"),s("OutboundLink")],1)]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#安装Erlang所需的依赖")]),a._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" epel-release\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 解压")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Uvh")]),a._v(" erlang-23.2.7-2.el7.x86_64.rpm\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#安装Erlang")]),a._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" erlang\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看Erlang是否安装成功")]),a._v("\nerl "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-version")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("h2",{attrs:{id:"_2、安装rabbitmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、安装rabbitmq"}},[a._v("#")]),a._v(" 2、安装RabbitMQ")]),a._v(" "),s("p",[a._v("RabbitMQ官网地址："),s("a",{attrs:{href:"https://www.rabbitmq.com/download.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.rabbitmq.com/download.html"),s("OutboundLink")],1),s("br"),a._v("将RabbitMQ的rpm包下载下来并保存到到本地的"),s("code",[a._v("/usr/local/software")]),a._v("目录下(如果没有software建议自己创建)。"),s("br"),a._v("在RabiitMQ安装过程中需要依赖socat插件，首先安装该插件，然后解压RabbitMQ的安装包。")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 安装socat插件")]),a._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" socat\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 解压")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Uvh")]),a._v(" rabbitmq-server-3.8.14-1.el7.noarch.rpm\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 安装")]),a._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" rabbitmq-server\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("p",[a._v("此处如果安装过程出现错误，有可能是因为主机名的设置不规范导致，建议修改主机名后重新安装。")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 修改文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /etc/sysconfig/network\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 添加如下内容（名字可自定义）")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("NETWORKING")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("yes\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("HOSTNAME")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("localhost\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 修改文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /etc/hosts\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 添加如下内容：服务器ip 主机名")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".222.139 localhost\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("p",[a._v("安装完成以后启动RabbitMQ")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动rabbitmq")]),a._v("\nsystemctl start rabbitmq-server\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看rabbitmq状态")]),a._v("\nsystemctl status rabbitmq-server\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置开机自启")]),a._v("\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" rabbitmq-server\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 停止rabbitmq")]),a._v("\nsystemctl stop rabbitmq-server\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/rabbitmq-6.png",alt:"image.png"}}),s("br"),a._v("显示active则表示服务安装并启动成功。"),s("br"),a._v("最后我们想方便的对RabbitMQ进行查看和管理，可以开启web端控制台插件。")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 打开RabbitMQWeb管理界面插件")]),a._v("\nrabbitmq-plugins "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" rabbitmq_management\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("RabbitMQ 默认端口是 "),s("code",[a._v("5672")]),a._v("，管控台的默认端口为 "),s("code",[a._v("15672")]),s("br"),a._v("开启以后就可以在浏览器通过"),s("code",[a._v("http://192.168.222.139:15672/")]),a._v("访问web管理控制台。"),s("br"),a._v("如果发现访问不通大概率是因为防火墙没有开放相应端口，进行如下设置：")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  开放5672,15672端口")]),a._v("\nfirewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("public --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5672")]),a._v("/tcp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--permanent")]),a._v("\nfirewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--zone")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("public --add-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("15672")]),a._v("/tcp "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--permanent")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 重载让配置生效")]),a._v("\nfirewall-cmd "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--reload")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/rabbitmq-7.png",alt:"image.png"}}),s("br"),a._v("RabbitMQ默认自带一个用户名：guest，密码：guest的账户。"),s("br"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/rabbitmq-8.png",alt:"image.png"}}),s("br"),a._v("进行登录以后会提示该账户只能本地登录，虽然我们可以通过修改rabbitmq.conf配置文件添加"),s("code",[a._v("loopback_users=none")]),a._v("的方式让guest默认账户允许远程访问，但是不建议这么做，因为这样会带来不必要的安全风险，此处建议做法是新建一个管理员账户，并且自定义设置强密码。")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建账户（后面为用户名和密码）")]),a._v("\nrabbitmqctl add_user admin scr1pt_yang.\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#给用户授予管理员角色")]),a._v("\nrabbitmqctl set_user_tags admin administrator\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('#给用户授权（"/"表示虚拟主机、"admin"表示用户名、".*"".*"".*"表示完整权限）')]),a._v("\nrabbitmqctl set_permissions "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/"')]),a._v(" admin "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".*"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".*"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('".*"')]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#查看所有用户")]),a._v("\nrabbitmqctl list_users\n\nListing "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("users")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\nuser\ttags\nadmin\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("administrator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\nguest\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("administrator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/rabbitmq-9.png",alt:"image.png"}}),s("br"),a._v("使用admin账户进行登录，即可进入rabbitmq的后台控制端。可通过web可视化界面进行各类功能的管理，至此，rabbitmq的安装完成。")])])}),[],!1,null,null,null);s.default=n.exports}}]);