(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{461:function(s,t,a){"use strict";a.r(t);var r=a(2),e=Object(r.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("hr"),s._v(" "),t("p",[s._v("在某些业务场景下，Dockerhub、阿里云这样的公共镜像仓库可能不太方便，涉及机密的公司不可能提供镜像给公网，所以需要创建一个本地私人仓库供给团队使用，基于公司内部项目构建镜像。Docker Registry是官方提供的工具，可以用于构建私有镜像仓库。")]),s._v(" "),t("h2",{attrs:{id:"一、下载docker-registry"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、下载docker-registry"}},[s._v("#")]),s._v(" 一、下载Docker Registry")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull registry \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-66.png",alt:""}}),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-67.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"二、运行registry"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、运行registry"}},[s._v("#")]),s._v(" 二、运行Registry")]),s._v(" "),t("p",[s._v("运行私有库Registry以后，相当于在本地搞了一个私有Docker Hub。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v(":5000  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v(" /zzyyuse/myregistry/:/tmp/registry "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--privileged")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true registry\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("默认情况，仓库被创建在容器的/var/lib/registry目录下，建议自行用容器卷映射，方便与宿主机联调。至于数据卷的概念我们后面会谈到。"),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-68.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"三、构建新的镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、构建新的镜像"}},[s._v("#")]),s._v(" 三、构建新的镜像")]),s._v(" "),t("p",[s._v("此处我们使用ubuntu镜像创建容器实例，安装ifconfig命令后将新的镜像commit。"),t("br"),s._v("首先从Hub上下载ubuntu镜像到本地成功运行，原始的ubuntu镜像是不带ifconfig命令的。"),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-69.png",alt:""}}),t("br"),s._v("在外网连通的情况下，安装ifconfig命令并测试通过。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" net-tools\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-70.png",alt:""}}),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-71.png",alt:""}}),t("br"),s._v("安装完成以后，commit我们的新镜像。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"提交的描述信息"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"作者"')]),s._v(" 容器ID 要创建的目标镜像名:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("标签名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-72.png",alt:""}}),t("br"),s._v("启动新的ubuntu镜像并和原来的进行对比："),t("br"),s._v("首先官网默认下载的Ubuntu没有ifconfig命令。我们自己commit构建的新镜像，新增加了ifconfig功能，可以成功使用。"),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-73.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"四、curl验证私有库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、curl验证私有库"}},[s._v("#")]),s._v(" 四、curl验证私有库")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用curl命令发送HTTP GET请求，获取Docker镜像仓库的目录列表。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-XGET")]),s._v(" http://192.168.111.162:5000/v2/_catalog\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("可以看到，目前私服库没有任何镜像上传过。"),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-74.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"五、修改新镜像的tag"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、修改新镜像的tag"}},[s._v("#")]),s._v(" 五、修改新镜像的Tag")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("   tag   镜像:Tag   Host:Port/Repository:Tag\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[s._v("OPTIONS说明："),t("br"),s._v("docker tag：Docker命令，用于给镜像打标签。"),t("br"),s._v("镜像:Tag：表示要打标签的本地镜像的名称和标签。"),t("br"),s._v("Host:Port/Repository:Tag：表示目标镜像仓库的地址、端口、仓库名称和标签。")])]),t("p",[s._v("执行这条命令后，本地的镜像将被添加一个新的标签，并且与目标镜像仓库的地址和标签信息相关联。这样可以方便后续推送镜像到指定的仓库。"),t("br"),t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-75.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"六、修改配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、修改配置文件"}},[s._v("#")]),s._v(" 六、修改配置文件")]),s._v(" "),t("p",[s._v("docker默认不允许http方式推送镜像，通过修改配置选项来取消这个限制。"),t("br"),s._v("vim命令新增如下红色内容："),t("code",[s._v("vim /etc/docker/daemon.json")])]),s._v(" "),t("div",{staticClass:"custom-block danger"},[t("p",{staticClass:"title"}),t("p",[s._v("{"),t("br"),s._v('  "registry-mirrors": ["https://aa25jngu.mirror.aliyuncs.com"],'),t("br"),s._v('  "insecure-registries": ["192.168.111.162:5000"]'),t("br"),s._v("}")])]),t("p",[s._v("这个配置是json格式的，2个配置中间有个逗号 ',' 修改完后如果不生效，建议重启docker。")]),s._v(" "),t("h2",{attrs:{id:"七、push推送到私有库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、push推送到私有库"}},[s._v("#")]),s._v(" 七、push推送到私有库")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" push "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".111.162:5000/zzyyubuntu:1.2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-76.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"八、curl再次验证私有库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#八、curl再次验证私有库"}},[s._v("#")]),s._v(" 八、curl再次验证私有库")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-XGET")]),s._v(" http://192.168.111.162:5000/v2/_catalog\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-77.png",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"九、pull到本地并运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#九、pull到本地并运行"}},[s._v("#")]),s._v(" 九、pull到本地并运行")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".111.162:5000/zzyyubuntu:1.2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-78.png",alt:""}})]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" 镜像ID /bin/bash\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/docker-79.png",alt:""}})])])}),[],!1,null,null,null);t.default=e.exports}}]);