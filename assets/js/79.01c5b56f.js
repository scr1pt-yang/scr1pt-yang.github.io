(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{494:function(t,s,a){"use strict";a.r(s);var r=a(2),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("hr"),t._v(" "),s("p",[t._v("Redis 的核心配置文件redis.conf 在安装根目录下，默认包含 2000 多行。这些内容根据功能被划分为了很多部分。下面将一些重要部分进行介绍。")]),t._v(" "),s("h1",{attrs:{id:"一、基础说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、基础说明"}},[t._v("#")]),t._v(" 一、基础说明")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-35.png",alt:"image.png"}}),s("br"),t._v("这部分主要是给出一些说明，包含三部分意思："),s("br"),t._v("●  第 1-6 行用于说明，如果要启动 Redis，需要指出配置文件的路径。"),s("br"),t._v("●  第 8-16 行用于说明当前配置文件中可以使用的的容量单位及意义。"),s("br"),t._v("●  第 18 行用于说明这些容量单位没有大小写之分。")]),t._v(" "),s("h1",{attrs:{id:"二、includes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、includes"}},[t._v("#")]),t._v(" 二、includes")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-36.png",alt:"image.png"}}),s("br"),t._v("指定要在当前配置文件中包含的配置文件。这样做的目的主要是便于配置信息管理：可以将不同场景的配置都进行单独定义，然后在当前核心配置文件中根据不同场景选择包含进不同的配置文件。")]),t._v(" "),s("h1",{attrs:{id:"三、modules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、modules"}},[t._v("#")]),t._v(" 三、modules")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-37.png",alt:"image.png"}}),s("br"),t._v("Redis 配置文件中可以通过加载不同的第三方模块，来增强、扩展 Redis 的功能。")]),t._v(" "),s("h1",{attrs:{id:"四、network"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、network"}},[t._v("#")]),t._v(" 四、network")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-38.png",alt:"image.png"}}),s("br"),t._v("Network 配置模块是比较重要的部分，主要进行网络相关的配置。其中较重要的有：")]),t._v(" "),s("h2",{attrs:{id:"_1、bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、bind"}},[t._v("#")]),t._v(" 1、bind")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-39.png",alt:"image.png"}}),s("br"),t._v("指定可以访问当前 Redis 服务的客户端 IP，默认只允许本地访问，即当前 Redis 自己访问自己。为了使所有其它客户端都可访问，一般要将其注释掉。")]),t._v(" "),s("h2",{attrs:{id:"_2、protected-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、protected-mode"}},[t._v("#")]),t._v(" 2、protected mode")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-40.png",alt:"image.png"}}),s("br"),t._v("默认保护模式是开启的。其只允许本机的客户端访问，即只允许自己访问自己。但生产中应该关闭，以确保其它客户端可以连接 Redis。")]),t._v(" "),s("h2",{attrs:{id:"_3、port"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、port"}},[t._v("#")]),t._v(" 3、port")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-41.png",alt:"image.png"}}),s("br"),t._v("Redis 监听的连接端口号，默认 6379。")]),t._v(" "),s("h2",{attrs:{id:"_4、tcp-backlog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、tcp-backlog"}},[t._v("#")]),t._v(" 4、tcp backlog")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-42.png",alt:"image.png"}}),s("br"),t._v("tcp-backlog 是一个 TCP 连接的队列，其主要用于解决高并发场景下客户端慢连接问题。这里设置的值就是这个队列的长度。该队列与 TCP 连接的三次握手有关。不同的 Linux 内核， backlog 队列中存放的元素（客户端连接）类型是不同的。"),s("br"),t._v("●  "),s("strong",[t._v("Linux 内核 2.2 版本之前")]),t._v("，该队列中存放的是已完成了第一次握手的所有客户端连接，其中就包含已完成三次握手的客户端连接。当然，此时的 backlog 队列中的连接也具有两种状态：未完成三次握手的连接状态为 SYN_RECEIVED，已完成三次握手的连接状态为 ESTABLISHED。只有 ESTABLISHED 状态的连接才会被 Redis 处理。"),s("br"),t._v("●  "),s("strong",[t._v("Linux 内核 2.2 版本之后")]),t._v(" TCP 系统中维护了两个队列：SYN_RECEIVED 队列与 ESTABLISHED队列。SYN_RECEIVED 队列中存放的是未完成三次握手的连接，ESTABLISHED 队列中存放的是已完成三次握手的连接。此时的 backlog 就是 ESTABLISHED 队列。"),s("br"),t._v("查看 Linux 内核版本："),s("br"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-43.png",alt:"image.png"}}),s("br"),t._v("TCP 中的 backlog 队列的长度在 Linux 中由内核参数 somaxconn 来决定。所以，在 Redis中该队列的长度由Redis 配置文件设置与somaxconn 来共同决定：取它们中的最小值。"),s("br"),t._v("查看当前 Linux 内核中 somaxconn 的值。"),s("br"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-44.png",alt:"image.png"}}),s("br"),t._v("生产环境下（特别是高并发场景下），backlog 的值最好要大一些，否则可能会影响系统性能。"),s("br"),t._v("修改/etc/sysctl.conf 文件，在文件最后添加如下内容："),s("br"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-45.png",alt:"image.png"}}),s("br"),t._v("修改过后可以重启虚拟机，也可以通过执行如下命令来使新的修改生效。"),s("br"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-46.png",alt:"image.png"}})]),t._v(" "),s("h2",{attrs:{id:"_5、timeout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、timeout"}},[t._v("#")]),t._v(" 5、timeout")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-47.png",alt:"image.png"}}),s("br"),t._v("空闲超时。当客户端与 Redis 间的空闲时间超过该时长后，连接自动断开。单位秒。默认值为 0，表示永远不超时。")]),t._v(" "),s("h2",{attrs:{id:"_6、tcp-keepalive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、tcp-keepalive"}},[t._v("#")]),t._v(" 6、tcp keepalive")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-48.png",alt:"image.png"}}),s("br"),t._v("该配置主要用于设置 Redis 检测与其连接的所有客户端的存活性时间间隔，单位秒。一般是在空闲超时timeout 设置为 0 时进行配置。")]),t._v(" "),s("h1",{attrs:{id:"五、general"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、general"}},[t._v("#")]),t._v(" 五、general")]),t._v(" "),s("h2",{attrs:{id:"_1、daemonize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、daemonize"}},[t._v("#")]),t._v(" 1、daemonize")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-49.png",alt:"image.png"}}),s("br"),t._v("该配置可以控制Redis 启动是否采用守护进程方式，即是否是后台启动。yes 是采用后台启动。")]),t._v(" "),s("h2",{attrs:{id:"_2、pidfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、pidfile"}},[t._v("#")]),t._v(" 2、pidfile")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-50.png",alt:"image.png"}}),s("br"),t._v("该配置用于指定Redis 运行时 pid 写入的文件，无论 Redis 是否采用守护进程方式启动，pid 都会写入到该配置的文件。"),s("br"),t._v("注意，如果没有配置 pid 文件，不同的启动方式，pid 文件的产生效果是不同的："),s("br"),t._v("●  采用守护进程方式启动（后台启动，daemonize 为 yes）：pid 文件为/var/run/redis.pid。"),s("br"),t._v("●  采用前台启动（daemonize 为 no）：不生产 pid 文件")]),t._v(" "),s("h2",{attrs:{id:"_3、loglevel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、loglevel"}},[t._v("#")]),t._v(" 3、loglevel")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-51.png",alt:"image.png"}}),s("br"),t._v("配置日志的级别。Redis 中共有四个级别，由低到高依次是："),s("br"),t._v("●  debug：可以获取到很多的信息，一般在开发和测试时使用。"),s("br"),t._v("●  verbose：可以获取到很多不太有用的信息，但不像 debug 级别那么多。"),s("br"),t._v("●  notice：可以获取到在生产中想获取到的适当多的信息，默认级别。"),s("br"),t._v("●  warning：只记录非常重要/关键的信息。")]),t._v(" "),s("h2",{attrs:{id:"_4、logfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、logfile"}},[t._v("#")]),t._v(" 4、logfile")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-52.png",alt:"image.png"}}),s("br"),t._v("指定日志文件。如果设置为空串，则强制将日志记录到标准输出设备（显示器）。如果使用的是守护进程启动方式，设置为空串，则意味着会将日志发送到设备/dev/null（空设备）。")]),t._v(" "),s("h2",{attrs:{id:"_5、databases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、databases"}},[t._v("#")]),t._v(" 5、databases")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-53.png",alt:"image.png"}}),s("br"),t._v("设置数据库的数量。默认数据库是 0 号数据库。可以使用 select 在每个连接的基础上选择一个不同的数据库，其中 dbid 是介于 0 和'databases'-1'之间的数字。")]),t._v(" "),s("h1",{attrs:{id:"六、security"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、security"}},[t._v("#")]),t._v(" 六、security")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-54.png",alt:"image.png"}}),s("br"),t._v("用户设置ACL 权限、Redis 访问密码相关配置。该模块中最常用的就是 requirepass 属性。"),s("br"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-55.png",alt:"image.png"}}),s("br"),t._v("设置客户端访问密码。注释掉后则没有密码。")]),t._v(" "),s("h1",{attrs:{id:"七、clients"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、clients"}},[t._v("#")]),t._v(" 七、clients")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-56.png",alt:"image.png"}}),s("br"),t._v("该模块用于设置与客户端相关的属性，其中仅包含一个属性 maxclients。"),s("br"),t._v("maxclients 用于设置 Redis 可并发处理的客户端连接数量，默认值为 10000。如果达到了该最大连接数，则会拒绝再来的新连接，并返回一个异常信息：已达到最大连接数。"),s("br"),t._v("注意，该值不能超过 Linux 系统支持的可打开的文件描述符最大数量阈值。查看该阈值的方式如下。修改该值，可以通过修改/etc/secutiry/limits.conf 文件。"),s("br"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-57.png",alt:"image.png"}})]),t._v(" "),s("h1",{attrs:{id:"七、memory-management"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、memory-management"}},[t._v("#")]),t._v(" 七、memory management")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-58.png",alt:"image.png"}}),s("br"),t._v("该配置可以控制最大可用内存及相关内容移除问题。")]),t._v(" "),s("h2",{attrs:{id:"_1、maxmemory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、maxmemory"}},[t._v("#")]),t._v(" 1、maxmemory")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-59.png",alt:"image.png"}}),s("br"),t._v("将内存使用限制设置为指定的字节数。当达到内存限制时，Redis 将根据选择的逐出策略 maxmemory-policy 尝试删除符合条件的 key。"),s("br"),t._v("如果不能按照逐出策略移除 key，则会给写操作命令返回 error，但对于只读的命令是没有影响的。")]),t._v(" "),s("h2",{attrs:{id:"_2、maxmamory-policy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、maxmamory-policy"}},[t._v("#")]),t._v(" 2、maxmamory policy")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-60.png",alt:"image.png"}}),s("br"),t._v("该属性用于设置，当达到 maxmemory 时，Redis 将如何选择要移除的内容。当然，如果没有符合相应策略的内容要删除，则在执行写入命令时会给出 errors 的响应。Redis 中共支持 8 种移除策略："),s("br"),t._v("●  volatile-lru：使用近似 LRU 算法移除，仅适用于设置了过期时间的 key。"),s("br"),t._v("●  allkeys-lru：使用近似 LRU 算法移除，可适用于所有类型的 key。"),s("br"),t._v("●  volatile-lfu：使用近似 LFU 算法移除，仅适用于设置了过期时间的 key。"),s("br"),t._v("●  allkeys-lfu：使用近似 LFU 算法移除，可适用于所有类型的 key。"),s("br"),t._v("●  volatile-random：随机移除一个 key，仅适用于设置了过期时间的 key。"),s("br"),t._v("●  allkeys-random：随机移除一个 key，可适用于所有类型的 key。"),s("br"),t._v("●  volatile-ttl：移除距离过期时间最近的key。"),s("br"),t._v("●  noeviction：不移除任何内容，只是在写操作时返回一个错误，默认值。")]),t._v(" "),s("h2",{attrs:{id:"_3、maxmemory-samples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、maxmemory-samples"}},[t._v("#")]),t._v(" 3、maxmemory samples")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-61.png",alt:"image.png"}}),s("br"),t._v("该属性用于指定挑选要删除的 key 的样本数量。样本的选择采用的是 LRU 算法，其不能修改。但从样本中再选择要移除的 key，则采用的是 maxmamory-policy 指定的策略。")]),t._v(" "),s("h2",{attrs:{id:"_4、maxmemory-eviction-tenacity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、maxmemory-eviction-tenacity"}},[t._v("#")]),t._v(" 4、maxmemory eviction tenacity")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-62.png",alt:"image.png"}}),s("br"),t._v("设置移除容忍度。数值越小表示容忍度越低，需要移除的数据移除延迟越小；数值越大表示容忍度越高，需要移除的数据移除延迟越大。")]),t._v(" "),s("h1",{attrs:{id:"八、threaded-i-o"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、threaded-i-o"}},[t._v("#")]),t._v(" 八、threaded I/O")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-63.png",alt:"image.png"}}),s("br"),t._v("该配置模块用于配置 Redis 对多线程 IO 模型的支持。")]),t._v(" "),s("h2",{attrs:{id:"_1、io-threads"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、io-threads"}},[t._v("#")]),t._v(" 1、io threads")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-64.png",alt:"image.png"}}),s("br"),t._v("该属性用于指定要启用多线程 IO 模型时，要使用的线程数量。"),s("br"),t._v("查看当前系统中包含的 CPU 数量："),s("br"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-65.png",alt:"image.png"}})]),t._v(" "),s("h2",{attrs:{id:"_2、io-threads-do-reads"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、io-threads-do-reads"}},[t._v("#")]),t._v(" 2、io threads do reads")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/scr1pt-yang/mypichost@main/img/redis-66.png",alt:"image.png"}}),s("br"),t._v("该属性用于启用多线程 IO 模型中的多线程处理读请求的能力。")])])}),[],!1,null,null,null);s.default=e.exports}}]);